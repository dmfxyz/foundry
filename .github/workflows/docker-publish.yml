name: Build and Publish Docker

on: 
  workflow_dispatch:
  workflow_call:

env:
  REGISTRY: ghcr.io
  # Will resolve to gakonst/foundry
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1.14.1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3.6.2
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Creates an additional 'latest' or 'nightly' tag
      # If the job is triggered via cron schedule, tag nightly and nightly-{SHA}
      # If the job is triggered via workflow dispatch and on a master branch, tag latest
      # Otherwise, just tag as the branch name
      - name: Assign Additional Docker Metadata
        id: additional_tags
        run: |
          if [[ "${{ github.event_name }}" == 'schedule' ]]; then
            echo "cron trigger, assigning nightly tag"
            echo "::set-output name=additonal_tag::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:nightly,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:nightly-${GITHUB_SHA}"
          elif [[ "${{ steps.meta.outputs.tags }}" == *"foundry:main" ]] || [[ "${{ steps.meta.outputs.tags }}" == *"foundry:master" ]]; then
            echo "manual trigger from master/main branch, assigning latest tag"
            echo "::set-output name=additional_tag::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          else
            echo "Neither scheduled nor manual release from main branch. No additional tags."
          fi

      # Log docker metadata to explicitly know what is being pushed
      - name: Inspect Docker Metadata
        run: |
          echo "TAGS -> ${{ steps.meta.outputs.tags }}, ${{ steps.additional_tags.outputs.additional_tag }}"
          echo "LABELS ->  ${{ steps.meta.outputs.labels }}"
        
      # Build and push Docker image
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v2.10.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }},${{ steps.additional_tags.outputs.additional_tag }}
          labels: ${{ steps.meta.outputs.labels }}
